// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const HostScanRequestSchema = {
    properties: {
        ip: {
            type: 'string',
            title: 'Ip'
        }
    },
    type: 'object',
    required: ['ip'],
    title: 'HostScanRequest'
} as const;

export const NetworkSummarySchema = {
    properties: {
        description: {
            type: 'string',
            title: 'Description'
        }
    },
    type: 'object',
    required: ['description'],
    title: 'NetworkSummary'
} as const;

export const NodeSchema = {
    properties: {
        ip: {
            type: 'string',
            title: 'Ip'
        },
        mac_address: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Mac Address'
        },
        hostname: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Hostname'
        },
        vendor: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Vendor'
        },
        os: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Os'
        },
        open_ports: {
            items: {
                additionalProperties: {
                    anyOf: [
                        {
                            type: 'integer'
                        },
                        {
                            type: 'string'
                        }
                    ]
                },
                type: 'object'
            },
            type: 'array',
            title: 'Open Ports',
            default: []
        },
        last_seen: {
            type: 'string',
            title: 'Last Seen'
        },
        status: {
            type: 'string',
            title: 'Status'
        },
        other_info: {
            additionalProperties: {
                type: 'string'
            },
            type: 'object',
            title: 'Other Info',
            default: {}
        },
        connected_to: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Connected To',
            default: []
        },
        hop_distance: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Hop Distance'
        },
        node_type: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Node Type'
        }
    },
    type: 'object',
    required: ['ip', 'last_seen', 'status'],
    title: 'Node'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;